@model IEnumerable<VerzamelWoede.Models.Item>

@{
    ViewData["Title"] = "Items";
}


<div style="flex-grow: 1;">
    <!-- Dropdown form for sorting -->
    <div style="text-align: left; margin-bottom: 20px;">
        <form asp-action="Index" method="get" style="display: inline-block;">
            <label for="sortOrder">Sort by:</label>
            <select id="sortOrder" name="sortOrder" class="form-control" style="display: inline-block; width: auto;">
                <option value="name_asc" selected>Sort by Name (A-Z)</option>
                <option value="name_desc">Sort by Name (Z-A)</option>
                <option value="price_asc">Sort by Price (Low to High)</option>
                <option value="price_desc">Sort by Price (High to Low)</option>
                <option value="date_asc">Sort by Purchase Date (Oldest First)</option>
                <option value="date_desc">Sort by Purchase Date (Newest First)</option>
                <option value="category_asc">Sort by Category (A-Z)</option>
                <option value="category_desc">Sort by Category (Z-A)</option>
            </select>
            <input type="submit" value="Sort" class="btn btn-custom custom-border" />
        </form>
    </div>
</div>

<table class="table" style=" border: 1px solid black; margin-top:5px;">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Worth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.YearOfPurchase)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Condition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Origin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSold)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsLost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    € @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                    € @Html.DisplayFor(modelItem => item.Worth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearOfPurchase)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Condition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Origin)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSold)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsLost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn-custom" >Edit</a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn-custom" >Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id"class="btn-danger" >Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<p>
    <a asp-action="Create" class="btn-succes">Create New</a>
</p>

