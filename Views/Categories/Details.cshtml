@model Verzamelwoede.Models.CategoryViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Category</h1>
<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Categories.First().Name) <!-- Assuming you have a single Category -->
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Categories.First().Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayName("Collections")
        </dt>
        <dd class="col-sm-10">
            @if (Model.Collections != null && Model.Collections.Any())
            {
                @foreach (var collection in Model.Collections)
                {
                    @collection.Name<br />
                }
            }
            else
            {
                <p>No collections available.</p>
            }
        </dd>
    </dl>
    <h2>Items</h2>
    <hr />
</div>
<div>

    <table class="table">
    @if (Model.Items != null && Model.Items.Any())
    {
            <thead class="table-header">
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th> <!-- Add columns as needed -->
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td> <!-- Adjust fields as per your item model -->
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                </tr>
            }
        </tbody>
    }
    </table>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Categories.First()?.Id" class="btn-custom">Edit</a> |
    <a asp-action="Index" class="btn-custom">Back to List</a>
</div>
